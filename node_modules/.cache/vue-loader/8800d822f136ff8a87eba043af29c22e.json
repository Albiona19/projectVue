{"remainingRequest":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&scoped=true&","dependencies":[{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\src\\components\\Home.vue","mtime":1647269437500},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647094748761},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1647094748165},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647094748761},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1647094748165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}