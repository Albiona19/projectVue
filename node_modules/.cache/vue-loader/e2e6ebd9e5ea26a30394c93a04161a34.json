{"remainingRequest":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\src\\components\\About.vue?vue&type=template&id=c226fde6&scoped=true&","dependencies":[{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\src\\components\\About.vue","mtime":1647194937602},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647094748761},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1647094748165},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647094748761},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499155300000},{"path":"C:\\Users\\PULSE Electronics\\OneDrive\\Desktop\\projekti\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1647094748165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFib3V0LXNlY3Rpb24iIH0sIFsKICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCJBYm91dCBVcyBQYWdlIildKSwKICAgICAgICBfYygicCIsIFtfdm0uX3YoIlNvbWUgdGV4dCBhYm91dCB3aG8gd2UgYXJlIGFuZCB3aGF0IHdlIGRvLiIpXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJSZXNpemUgdGhlIGJyb3dzZXIgd2luZG93IHRvIHNlZSB0aGF0IHRoaXMgcGFnZSBpcyByZXNwb25zaXZlIGJ5IHRoZSB3YXkuIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiaDIiLCBbX3ZtLl92KCJPdXIgVGVhbSIpXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbGctNCBjb2wtbWQtNCBjb2wtc20tMTIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZCIgfSwgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTAwJSIgfSwKICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9hbGJpb25hLmpwZyIpLCBhbHQ6ICJBbGJpb25hIiB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkFsYmlvbmEgQmVyaXNoYSIpXSksCiAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFtfdm0uX3YoIkNFTyAmIEZvdW5kZXIiKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiSSBhbSBhIHlvdW5nIHByb2Zlc3Npb25hbCB3aXRoIGVudGVycHJpc2UgYWltaW5nIHRvIGNvbnRpbnVlIG15IGRldmVsb3BtZW50IGFzIGEgcHJvZ3JhbW1lci4gSSBoYXZlIGdyZWF0IGtub3dsZWRnZSBpbiBzb21lIHByb2dyYW1taW5nIGxhbmd1YWdlcyBsaWtlIEphdmEsIFB5dGhvbiBhbmQgQyAjLiBJbiB0ZXJtcyBvZiByZXN1bHRzIGFuZCBvYmplY3RpdmVzLCBJIGFtIGVudGh1c2lhc3RpYyBhbmQgd29yayB3aXRoIGRldGVybWluYXRpb24gYW5kIGNvbnZpY3Rpb24uIEkgaGF2ZSBhIHByb2FjdGl2ZSBhdHRpdHVkZSBhbmQgZmluZCBwb3NpdGl2ZSB3YXlzIHRvIHN0aW11bGF0ZSBhbmQgZW5nYWdlIHdpdGggcGVvcGxlLiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoImFiNDc4NTNAdWJ0LXVuaS5uZXQiKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgX2MoImJ1dHRvbiIsIHsgc3RhdGljQ2xhc3M6ICJidXR0b24iIH0sIFtfdm0uX3YoIkNvbnRhY3QiKV0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbGctNCBjb2wtbWQtNCBjb2wtc20tMTIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZCIgfSwgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTAwJSIgfSwKICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9ibGluLmpwZyIpLCBhbHQ6ICJCbGluIiB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkJsaW4gU2FoYXRxaWphIildKSwKICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgW192bS5fdigiQ0VPICYgRm91bmRlciIpXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJJIGFtIGEgeW91bmcgcHJvZmVzc2lvbmFsIHdpdGggZW50ZXJwcmlzZSBhaW1pbmcgdG8gY29udGludWUgbXkgZGV2ZWxvcG1lbnQgYXMgYSBwcm9ncmFtbWVyLiBJIGhhdmUgZ3JlYXQga25vd2xlZGdlIGluIHNvbWUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIGxpa2UgSmF2YSwgUHl0aG9uIGFuZCBDICMuIEluIHRlcm1zIG9mIHJlc3VsdHMgYW5kIG9iamVjdGl2ZXMsIEkgYW0gZW50aHVzaWFzdGljIGFuZCB3b3JrIHdpdGggZGV0ZXJtaW5hdGlvbiBhbmQgY29udmljdGlvbi4gSSBoYXZlIGEgcHJvYWN0aXZlIGF0dGl0dWRlIGFuZCBmaW5kIHBvc2l0aXZlIHdheXMgdG8gc3RpbXVsYXRlIGFuZCBlbmdhZ2Ugd2l0aCBwZW9wbGUuIgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiYnM0NTYwNUB1YnQtdW5pLm5ldCIpXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfYygiYnV0dG9uIiwgeyBzdGF0aWNDbGFzczogImJ1dHRvbiIgfSwgW192bS5fdigiQ29udGFjdCIpXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1sZy00IGNvbC1tZC00IGNvbC1zbS0xMiIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkIiB9LCBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxMDAlIiB9LAogICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL2JsaW4uanBnIiksIGFsdDogIkJsaW4iIH0KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgICAgICAgICAgX2MoImgyIiwgW192bS5fdigiRm9ydGVzYSBSZXFpY2EiKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbX3ZtLl92KCJDRU8gJiBGb3VuZGVyIildKSwKICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIkkgYW0gYSB5b3VuZyBwcm9mZXNzaW9uYWwgd2l0aCBlbnRlcnByaXNlIGFpbWluZyB0byBjb250aW51ZSBteSBkZXZlbG9wbWVudCBhcyBhIHByb2dyYW1tZXIuIEkgaGF2ZSBncmVhdCBrbm93bGVkZ2UgaW4gc29tZSBwcm9ncmFtbWluZyBsYW5ndWFnZXMgbGlrZSBKYXZhLCBQeXRob24gYW5kIEMgIy4gSW4gdGVybXMgb2YgcmVzdWx0cyBhbmQgb2JqZWN0aXZlcywgSSBhbSBlbnRodXNpYXN0aWMgYW5kIHdvcmsgd2l0aCBkZXRlcm1pbmF0aW9uIGFuZCBjb252aWN0aW9uLiBJIGhhdmUgYSBwcm9hY3RpdmUgYXR0aXR1ZGUgYW5kIGZpbmQgcG9zaXRpdmUgd2F5cyB0byBzdGltdWxhdGUgYW5kIGVuZ2FnZSB3aXRoIHBlb3BsZS4iCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJiczQ1NjA1QHVidC11bmkubmV0IildKSwKICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgIF9jKCJidXR0b24iLCB7IHN0YXRpY0NsYXNzOiAiYnV0dG9uIiB9LCBbX3ZtLl92KCJDb250YWN0IildKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLWxnLTQgY29sLW1kLTQgY29sLXNtLTEyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQiIH0sIFsKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjEwMCUiIH0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0YW4uanBnIiksIGFsdDogIlRpdGFuIiB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIlRpdGFuIFNoYWxhIildKSwKICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgW192bS5fdigiQ0VPICYgRm91bmRlciIpXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJJIGFtIGEgeW91bmcgcHJvZmVzc2lvbmFsIHdpdGggZW50ZXJwcmlzZSBhaW1pbmcgdG8gY29udGludWUgbXkgZGV2ZWxvcG1lbnQgYXMgYSBwcm9ncmFtbWVyLiBJIGhhdmUgZ3JlYXQga25vd2xlZGdlIGluIHNvbWUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIGxpa2UgSmF2YSwgUHl0aG9uIGFuZCBDICMuIEluIHRlcm1zIG9mIHJlc3VsdHMgYW5kIG9iamVjdGl2ZXMsIEkgYW0gZW50aHVzaWFzdGljIGFuZCB3b3JrIHdpdGggZGV0ZXJtaW5hdGlvbiBhbmQgY29udmljdGlvbi4gSSBoYXZlIGEgcHJvYWN0aXZlIGF0dGl0dWRlIGFuZCBmaW5kIHBvc2l0aXZlIHdheXMgdG8gc3RpbXVsYXRlIGFuZCBlbmdhZ2Ugd2l0aCBwZW9wbGUuIgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigidHM0NDQyM0B1YnQtdW5pLm5ldCIpXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfYygiYnV0dG9uIiwgeyBzdGF0aWNDbGFzczogImJ1dHRvbiIgfSwgW192bS5fdigiQ29udGFjdCIpXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}